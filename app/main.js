/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ld48/constants.js":
/*!*******************************!*\
  !*** ./src/ld48/constants.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TILE_SIZE\": () => (/* binding */ TILE_SIZE),\n/* harmony export */   \"APP_WIDTH\": () => (/* binding */ APP_WIDTH),\n/* harmony export */   \"APP_HEIGHT\": () => (/* binding */ APP_HEIGHT),\n/* harmony export */   \"ACCEPTABLE_INPUT_DISTANCE_FROM_HERO\": () => (/* binding */ ACCEPTABLE_INPUT_DISTANCE_FROM_HERO),\n/* harmony export */   \"MAX_PULL_DISTANCE\": () => (/* binding */ MAX_PULL_DISTANCE),\n/* harmony export */   \"SHAPES\": () => (/* binding */ SHAPES),\n/* harmony export */   \"ROTATIONS\": () => (/* binding */ ROTATIONS),\n/* harmony export */   \"DIRECTIONS\": () => (/* binding */ DIRECTIONS),\n/* harmony export */   \"PLAYER_ACTIONS\": () => (/* binding */ PLAYER_ACTIONS),\n/* harmony export */   \"EXPECTED_FRAMES_PER_SECOND\": () => (/* binding */ EXPECTED_FRAMES_PER_SECOND),\n/* harmony export */   \"EXPECTED_TIMESTEP\": () => (/* binding */ EXPECTED_TIMESTEP),\n/* harmony export */   \"VICTORY_ANIMATION_TIME\": () => (/* binding */ VICTORY_ANIMATION_TIME),\n/* harmony export */   \"PAUSE_AFTER_VICTORY_ANIMATION\": () => (/* binding */ PAUSE_AFTER_VICTORY_ANIMATION)\n/* harmony export */ });\nvar TILE_SIZE = 64;\nvar APP_WIDTH = 24 * TILE_SIZE;\nvar APP_HEIGHT = 16 * TILE_SIZE;\nvar ACCEPTABLE_INPUT_DISTANCE_FROM_HERO = TILE_SIZE * 2;\nvar MAX_PULL_DISTANCE = TILE_SIZE * 6;\nvar SHAPES = {\n  NONE: 'none',\n  CIRCLE: 'circle',\n  SQUARE: 'square',\n  POLYGON: 'polygon'\n};\nvar ROTATIONS = {\n  EAST: 0,\n  SOUTHEAST: Math.PI * 0.25,\n  SOUTH: Math.PI * 0.5,\n  SOUTHWEST: Math.PI * 0.75,\n  WEST: Math.PI,\n  NORTHWEST: Math.PI * -0.75,\n  NORTH: Math.PI * -0.5,\n  NORTHEAST: Math.PI * -0.25\n};\nvar DIRECTIONS = {\n  EAST: 0,\n  SOUTH: 1,\n  WEST: 2,\n  NORTH: 3\n};\nvar PLAYER_ACTIONS = {\n  IDLE: 'idle',\n  // Player isn't doing anything\n  POINTER_DOWN: 'pointer down' // Player is actively interacting with the canvas.\n\n};\n/*\r\nWhile the engine is technically able to support any given framerate (determined\r\nby the hardware), a baseline is required to ground our video game logic to.\r\ne.g. we can say that we expect an object with \"movement speed\" of \"2\" to travel\r\n120 pixels in 1 second. (2 pixels per frame * 60 frames per second)\r\n */\n\nvar EXPECTED_FRAMES_PER_SECOND = 60;\nvar EXPECTED_TIMESTEP = 1000 / EXPECTED_FRAMES_PER_SECOND; // Time it takes to play victory animation\n\nvar VICTORY_ANIMATION_TIME = 500; // milliseconds\n\nvar PAUSE_AFTER_VICTORY_ANIMATION = 1000; // milliseconds\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/constants.js?");

/***/ }),

/***/ "./src/ld48/entities/coin.js":
/*!***********************************!*\
  !*** ./src/ld48/entities/coin.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entity */ \"./src/ld48/entity.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/ld48/constants.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar Coin = /*#__PURE__*/function (_Entity) {\n  _inherits(Coin, _Entity);\n\n  var _super = _createSuper(Coin);\n\n  function Coin(app) {\n    var _this;\n\n    var col = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var row = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Coin);\n\n    _this = _super.call(this, app);\n    _this.colour = '#864';\n    _this.x = col * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE + _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE / 2;\n    _this.y = row * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE + _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE / 2;\n    _this.z = 70;\n    _this.solid = false;\n    _this.animationCounterMax = 1000;\n    _this.pickedUp = false; // Has this coin been picked up by the hero? \n\n    _this.expiryCountdown = 1000; // Time from being picked up to disappearing\n\n    return _this;\n  }\n\n  _createClass(Coin, [{\n    key: \"onCollision\",\n    value: function onCollision(target, collisionCorrection) {\n      var app = this._app; // Coin has been picked up by the hero!\n\n      if (!this.pickedUp && target === app.hero) {\n        this.pickedUp = true;\n        this.animationCounter = 0; // Reset animation\n\n        console.log('ding!');\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play(timeStep) {\n      _get(_getPrototypeOf(Coin.prototype), \"play\", this).call(this, timeStep); // Once picked up, a coin should disappear.\n\n\n      if (this.pickedUp) {\n        this.expiryCountdown -= timeStep;\n      }\n\n      if (this.expiryCountdown <= 0) {\n        this._expired = true;\n      }\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      if (!this.pickedUp) {\n        _get(_getPrototypeOf(Coin.prototype), \"paint\", this).call(this);\n      }\n\n      var app = this._app;\n      var c2d = app.canvas2d;\n      var camera = app.camera;\n      var animationSpritesheet = app.assets.coin;\n      if (!animationSpritesheet) return;\n\n      if (animationSpritesheet) {\n        var SPRITE_SIZE = 32;\n        var SPRITE_OFFSET_X = 0;\n        var SPRITE_OFFSET_Y = 0;\n        var srcSizeX = SPRITE_SIZE;\n        var srcSizeY = SPRITE_SIZE;\n        var srcX = !this.pickedUp ? 0 : SPRITE_SIZE;\n        var srcY = 0;\n        var tgtSizeX = SPRITE_SIZE * 1.25;\n        var tgtSizeY = SPRITE_SIZE * 1.25;\n        var tgtX = Math.floor(this.x + camera.x) - srcSizeX / 2 + SPRITE_OFFSET_X - (tgtSizeX - srcSizeX) / 2;\n        var tgtY = Math.floor(this.y + camera.y) - srcSizeY / 2 + SPRITE_OFFSET_Y - (tgtSizeY - srcSizeY) / 2;\n        var animationProgress = this.animationCounter / this.animationCounterMax;\n\n        if (animationProgress < 0.25) {\n          srcY = 0 * SPRITE_SIZE;\n        } else if (animationProgress < 0.5) {\n          srcY = 1 * SPRITE_SIZE;\n        } else if (animationProgress < 0.75) {\n          srcY = 2 * SPRITE_SIZE;\n        } else {\n          srcY = 3 * SPRITE_SIZE;\n        }\n\n        c2d.drawImage(animationSpritesheet.img, srcX, srcY, srcSizeX, srcSizeY, tgtX, tgtY, tgtSizeX, tgtSizeY);\n      }\n    }\n  }]);\n\n  return Coin;\n}(_entity__WEBPACK_IMPORTED_MODULE_0__.default);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Coin);\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/entities/coin.js?");

/***/ }),

/***/ "./src/ld48/entities/goal.js":
/*!***********************************!*\
  !*** ./src/ld48/entities/goal.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entity */ \"./src/ld48/entity.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/ld48/constants.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar Goal = /*#__PURE__*/function (_Entity) {\n  _inherits(Goal, _Entity);\n\n  var _super = _createSuper(Goal);\n\n  function Goal(app) {\n    var _this;\n\n    var col = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var row = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Goal);\n\n    _this = _super.call(this, app);\n    _this.colour = '#a66';\n    _this.size = _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE * 2;\n    _this.solid = false;\n    _this.x = col * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE + _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE / 2;\n    _this.y = row * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE + _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE / 2;\n    _this.animationCounterMax = 1500;\n    return _this;\n  }\n\n  _createClass(Goal, [{\n    key: \"onCollision\",\n    value: function onCollision(target, collisionCorrection) {\n      if (target !== this._app.hero) return null;\n      var goal = this;\n      var hero = target; // Pull hero to the centre\n\n      var distX = goal.x - hero.x;\n      var distY = goal.y - hero.y;\n      var angleToGoal = Math.atan2(distY, distX);\n      var distanceToGoal = Math.sqrt(distX * distX + distY * distY);\n      hero.speedX = Math.cos(angleToGoal) * Math.min(distanceToGoal, hero.movementSpeed);\n      hero.speedY = Math.sin(angleToGoal) * Math.min(distanceToGoal, hero.movementSpeed);\n\n      if (!this._app.victory) {\n        this._app.celebrateVictory();\n      }\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      _get(_getPrototypeOf(Goal.prototype), \"paint\", this).call(this);\n\n      var app = this._app;\n      var c2d = app.canvas2d;\n      var camera = app.camera;\n      var animationSpritesheet = app.assets.goal;\n      if (!animationSpritesheet) return;\n      var SPRITE_SIZE = 64;\n      var SPRITE_OFFSET_X = 0;\n      var SPRITE_OFFSET_Y = 0;\n      var srcSizeX = SPRITE_SIZE;\n      var srcSizeY = SPRITE_SIZE;\n      var srcX = 0;\n      var srcY = 0;\n      var tgtSizeX = SPRITE_SIZE;\n      var tgtSizeY = SPRITE_SIZE;\n      var tgtX = Math.floor(this.x + camera.x) - srcSizeX / 2 + SPRITE_OFFSET_X - (tgtSizeX - srcSizeX) / 2;\n      var tgtY = Math.floor(this.y + camera.y) - srcSizeY / 2 + SPRITE_OFFSET_Y - (tgtSizeY - srcSizeY) / 2;\n      var animationProgress = this.animationCounter / this.animationCounterMax;\n\n      if (0.0 <= animationProgress && animationProgress < 0.3) {\n        srcX = 0;\n        srcY = 0;\n      } else if (0.3 <= animationProgress && animationProgress < 0.4) {\n        srcX = SPRITE_SIZE;\n        srcY = 0;\n      } else if (0.4 <= animationProgress && animationProgress < 0.5) {\n        srcX = 0;\n        srcY = SPRITE_SIZE;\n      } else if (0.5 <= animationProgress && animationProgress < 0.8) {\n        srcX = SPRITE_SIZE;\n        srcY = SPRITE_SIZE;\n      } else if (0.8 <= animationProgress && animationProgress < 0.9) {\n        srcX = 0;\n        srcY = SPRITE_SIZE;\n      } else if (0.9 <= animationProgress && animationProgress <= 1.0) {\n        srcX = SPRITE_SIZE;\n        srcY = 0;\n      }\n\n      c2d.drawImage(animationSpritesheet.img, srcX, srcY, srcSizeX, srcSizeY, tgtX, tgtY, tgtSizeX, tgtSizeY);\n    }\n  }]);\n\n  return Goal;\n}(_entity__WEBPACK_IMPORTED_MODULE_0__.default);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Goal);\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/entities/goal.js?");

/***/ }),

/***/ "./src/ld48/entities/hero.js":
/*!***********************************!*\
  !*** ./src/ld48/entities/hero.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entity */ \"./src/ld48/entity.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/ld48/constants.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar Hero = /*#__PURE__*/function (_Entity) {\n  _inherits(Hero, _Entity);\n\n  var _super = _createSuper(Hero);\n\n  function Hero(app) {\n    var _this;\n\n    var col = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var row = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Hero);\n\n    _this = _super.call(this, app);\n    _this.colour = '#000';\n    _this.x = col * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE + _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE / 2;\n    _this.y = row * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE + _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE / 2;\n    _this.z = 100;\n    _this.animationCounterMax = 1500;\n    return _this;\n  }\n\n  _createClass(Hero, [{\n    key: \"paint\",\n    value: function paint() {\n      var app = this._app;\n      this.colour = app.playerAction === _constants__WEBPACK_IMPORTED_MODULE_1__.PLAYER_ACTIONS.POINTER_DOWN ? '#e42' : '#c44';\n\n      _get(_getPrototypeOf(Hero.prototype), \"paint\", this).call(this);\n\n      var c2d = app.canvas2d;\n      var camera = app.camera;\n      var animationSpritesheet = app.assets.hero;\n      if (!animationSpritesheet) return;\n      var SPRITE_SIZE = 64;\n      var SPRITE_OFFSET_X = 0;\n      var SPRITE_OFFSET_Y = 0;\n      var srcSizeX = SPRITE_SIZE;\n      var srcSizeY = SPRITE_SIZE;\n      var srcX = 0;\n      var srcY = 0;\n      var tgtSizeX = SPRITE_SIZE * 1.25;\n      var tgtSizeY = SPRITE_SIZE * 1.25;\n      var tgtX = Math.floor(this.x + camera.x) - srcSizeX / 2 + SPRITE_OFFSET_X - (tgtSizeX - srcSizeX) / 2;\n      var tgtY = Math.floor(this.y + camera.y) - srcSizeY / 2 + SPRITE_OFFSET_Y - (tgtSizeY - srcSizeY) / 2;\n\n      if (this.movementSpeed) {\n        var animationProgress = this.animationCounter % (this.animationCounterMax / 3) / (this.animationCounterMax / 3);\n\n        if (animationProgress < 0.5) {\n          srcY = 2 * SPRITE_SIZE;\n        } else {\n          srcY = 3 * SPRITE_SIZE;\n        }\n      } else {\n        var _animationProgress = this.animationCounter / this.animationCounterMax;\n\n        if (_animationProgress < 0.5) {\n          srcY = 0;\n        } else {\n          srcY = SPRITE_SIZE;\n        }\n      }\n\n      srcX = this.speedX < 0 ? 0 : SPRITE_SIZE;\n      c2d.drawImage(animationSpritesheet.img, srcX, srcY, srcSizeX, srcSizeY, tgtX, tgtY, tgtSizeX, tgtSizeY);\n    }\n  }]);\n\n  return Hero;\n}(_entity__WEBPACK_IMPORTED_MODULE_0__.default);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Hero);\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/entities/hero.js?");

/***/ }),

/***/ "./src/ld48/entities/wall.js":
/*!***********************************!*\
  !*** ./src/ld48/entities/wall.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../entity */ \"./src/ld48/entity.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/ld48/constants.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar Wall = /*#__PURE__*/function (_Entity) {\n  _inherits(Wall, _Entity);\n\n  var _super = _createSuper(Wall);\n\n  function Wall(app) {\n    var _this;\n\n    var col = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var row = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var height = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    var cutCorner = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n    _classCallCheck(this, Wall);\n\n    _this = _super.call(this, app);\n    _this.colour = '#888';\n    _this.solid = true;\n    _this.movable = false;\n    _this.x = col * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE;\n    _this.y = row * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE;\n    _this.shape = _constants__WEBPACK_IMPORTED_MODULE_1__.SHAPES.POLYGON;\n    _this.shapePolygonPath = [];\n    if (cutCorner !== 'nw') _this.shapePolygonPath.push(0, 0);\n    if (cutCorner !== 'ne') _this.shapePolygonPath.push(width * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE, 0);\n    if (cutCorner !== 'se') _this.shapePolygonPath.push(width * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE, height * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE);\n    if (cutCorner !== 'sw') _this.shapePolygonPath.push(0, height * _constants__WEBPACK_IMPORTED_MODULE_1__.TILE_SIZE);\n    return _this;\n  }\n\n  return Wall;\n}(_entity__WEBPACK_IMPORTED_MODULE_0__.default);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Wall);\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/entities/wall.js?");

/***/ }),

/***/ "./src/ld48/entity.js":
/*!****************************!*\
  !*** ./src/ld48/entity.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ld48/constants.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Entity = /*#__PURE__*/function () {\n  function Entity(app) {\n    _classCallCheck(this, Entity);\n\n    this._app = app; // Expired entities are removed at the end of the cycle.\n\n    this._expired = false;\n    this.x = 0;\n    this.y = 0;\n    this.z = 0; // Only relevant to paint(), not to physics\n\n    this.size = _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE;\n    this._rotation = _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.SOUTH; // Rotation in radians\n    // Movement: self locomotion and external (pushed) movement.\n\n    this.speedX = 0;\n    this.speedY = 0;\n    this.pushX = 0;\n    this.pushY = 0;\n    this.shape = _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.CIRCLE;\n    this.shapePolygonPath = null; // Only applicable if shape === SHAPES.POLYGON\n\n    this.solid = true;\n    this.movable = true;\n    this.mass = 2; // Only matters if solid && movable\n    // this.moveAcceleration = 2\n\n    this.moveDeceleration = 16;\n    this.moveMaxSpeed = 16;\n    this.colour = '#ccc';\n    this.animationCounter = 0;\n    this.animationCounterMax = 0;\n  }\n\n  _createClass(Entity, [{\n    key: \"play\",\n    value: function play(timeStep) {\n      // Update position\n      var timeCorrection = timeStep / _constants__WEBPACK_IMPORTED_MODULE_0__.EXPECTED_TIMESTEP;\n      this.x += this.speedX * timeCorrection;\n      this.y += this.speedY * timeCorrection; // Upkeep: deceleration\n\n      var moveDeceleration = this.moveDeceleration * timeStep / 1000 || 0;\n      var curRotation = Math.atan2(this.speedY, this.speedX);\n      var curMoveSpeed = Math.sqrt(this.speedX * this.speedX + this.speedY * this.speedY);\n      var newMoveSpeed = Math.max(0, curMoveSpeed - moveDeceleration);\n      this.speedX = newMoveSpeed * Math.cos(curRotation);\n      this.speedY = newMoveSpeed * Math.sin(curRotation); // Step through animation\n\n      if (this.animationCounterMax > 0) {\n        this.animationCounter = (this.animationCounter + timeStep) % this.animationCounterMax;\n      }\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      /*\r\n      c2d.fillStyle = '#888'\r\n      if (this.movable && this.solid) {\r\n        c2d.fillStyle = '#48c'\r\n      }\r\n      \r\n      // DEBUG: Player colours\r\n      if (this === this._app.hero) {\r\n        c2d.fillStyle = '#c44'\r\n        if (this._app.playerAction === PLAYER_ACTIONS.POINTER_DOWN) {\r\n          c2d.fillStyle = '#e42'\r\n        }\r\n      }*/\n      this.paint_outline();\n    }\n  }, {\n    key: \"paint_outline\",\n    value: function paint_outline() {\n      var c2d = this._app.canvas2d;\n      var camera = this._app.camera;\n      c2d.fillStyle = this.colour;\n      c2d.strokeStyle = '#444';\n      c2d.lineWidth = this.mass; // Draw shape outline\n\n      switch (this.shape) {\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.CIRCLE:\n          c2d.beginPath();\n          c2d.arc(this.x + camera.x, this.y + camera.y, this.size / 2, 0, 2 * Math.PI);\n          c2d.closePath();\n          c2d.fill();\n          this.solid && c2d.stroke();\n          break;\n\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.SQUARE:\n          c2d.beginPath();\n          c2d.rect(this.x + camera.x - this.size / 2, this.y + camera.y - this.size / 2, this.size, this.size);\n          c2d.closePath();\n          c2d.fill();\n          this.solid && c2d.stroke();\n          break;\n\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.POLYGON:\n          c2d.beginPath();\n          var coords = this.vertices;\n          if (coords.length >= 1) c2d.moveTo(coords[coords.length - 1].x + camera.x, coords[coords.length - 1].y + camera.y);\n\n          for (var i = 0; i < coords.length; i++) {\n            c2d.lineTo(coords[i].x + camera.x, coords[i].y + camera.y);\n          }\n\n          c2d.closePath();\n          c2d.fill();\n          this.solid && c2d.stroke();\n          break;\n      } // Draw anchor point, mostly for debugging\n\n\n      c2d.fillStyle = 'rgba(255, 255, 255, 0.5)';\n      c2d.beginPath();\n      c2d.arc(this.x + camera.x, this.y + camera.y, 2, 0, 2 * Math.PI);\n      c2d.fill();\n    }\n  }, {\n    key: \"onCollision\",\n    value: function onCollision(target, collisionCorrection) {\n      this.x = collisionCorrection.x;\n      this.y = collisionCorrection.y;\n    }\n  }, {\n    key: \"left\",\n    get: function get() {\n      return this.x - this.size / 2;\n    },\n    set: function set(val) {\n      this.x = val + this.size / 2;\n    }\n  }, {\n    key: \"right\",\n    get: function get() {\n      return this.x + this.size / 2;\n    },\n    set: function set(val) {\n      this.x = val - this.size / 2;\n    }\n  }, {\n    key: \"top\",\n    get: function get() {\n      return this.y - this.size / 2;\n    },\n    set: function set(val) {\n      this.y = val + this.size / 2;\n    }\n  }, {\n    key: \"bottom\",\n    get: function get() {\n      return this.y + this.size / 2;\n    },\n    set: function set(val) {\n      this.y = val - this.size / 2;\n    }\n  }, {\n    key: \"radius\",\n    get: function get() {\n      return this.size / 2;\n    },\n    set: function set(val) {\n      this.size = val * 2;\n    }\n  }, {\n    key: \"rotation\",\n    get: function get() {\n      return this._rotation;\n    },\n    set: function set(val) {\n      this._rotation = val;\n\n      while (this._rotation > Math.PI) {\n        this._rotation -= Math.PI * 2;\n      }\n\n      while (this._rotation <= -Math.PI) {\n        this._rotation += Math.PI * 2;\n      }\n    }\n  }, {\n    key: \"direction\",\n    get: function get() {\n      //Get cardinal direction\n      //Favour East and West when rotation is exactly SW, NW, SE or NE.\n      if (this._rotation <= Math.PI * 0.25 && this._rotation >= Math.PI * -0.25) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.DIRECTIONS.EAST;\n      } else if (this._rotation > Math.PI * 0.25 && this._rotation < Math.PI * 0.75) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.DIRECTIONS.SOUTH;\n      } else if (this._rotation < Math.PI * -0.25 && this._rotation > Math.PI * -0.75) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.DIRECTIONS.NORTH;\n      } else {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.DIRECTIONS.WEST;\n      }\n    },\n    set: function set(val) {\n      switch (val) {\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.DIRECTIONS.EAST:\n          this._rotation = _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.EAST;\n          break;\n\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.DIRECTIONS.SOUTH:\n          this._rotation = _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.SOUTH;\n          break;\n\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.DIRECTIONS.WEST:\n          this._rotation = _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.WEST;\n          break;\n\n        case _constants__WEBPACK_IMPORTED_MODULE_0__.DIRECTIONS.NORTH:\n          this._rotation = _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.NORTH;\n          break;\n      }\n    }\n  }, {\n    key: \"vertices\",\n    get: function get() {\n      var _this = this;\n\n      var v = [];\n\n      if (this.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.SQUARE) {\n        v.push({\n          x: this.left,\n          y: this.top\n        });\n        v.push({\n          x: this.right,\n          y: this.top\n        });\n        v.push({\n          x: this.right,\n          y: this.bottom\n        });\n        v.push({\n          x: this.left,\n          y: this.bottom\n        });\n      } else if (this.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.CIRCLE) {\n        //Approximation\n        CIRCLE_TO_POLYGON_APPROXIMATOR.map(function (approximator) {\n          v.push({\n            x: _this.x + _this.radius * approximator.cosAngle,\n            y: _this.y + _this.radius * approximator.sinAngle\n          });\n        });\n      } else if (this.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.POLYGON) {\n        if (!this.shapePolygonPath) return [];\n\n        for (var i = 0; i < this.shapePolygonPath.length; i += 2) {\n          v.push({\n            x: this.x + this.shapePolygonPath[i],\n            y: this.y + this.shapePolygonPath[i + 1]\n          });\n        }\n      }\n\n      return v;\n    }\n  }, {\n    key: \"movementSpeed\",\n    get: function get() {\n      return Math.sqrt(this.speedX * this.speedX + this.speedY * this.speedY);\n    }\n  }, {\n    key: \"movementAngle\",\n    get: function get() {\n      return Math.atan2(this.speedY, this.speedX);\n    }\n  }]);\n\n  return Entity;\n}();\n\nvar CIRCLE_TO_POLYGON_APPROXIMATOR = [_constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.EAST, _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.SOUTHEAST, _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.SOUTH, _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.SOUTHWEST, _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.WEST, _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.NORTHWEST, _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.NORTH, _constants__WEBPACK_IMPORTED_MODULE_0__.ROTATIONS.NORTHEAST].map(function (angle) {\n  return {\n    cosAngle: Math.cos(angle),\n    sinAngle: Math.sin(angle)\n  };\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Entity);\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/entity.js?");

/***/ }),

/***/ "./src/ld48/image-asset.js":
/*!*********************************!*\
  !*** ./src/ld48/image-asset.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ImageAsset)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ImageAsset = function ImageAsset(url) {\n  _classCallCheck(this, ImageAsset);\n\n  this.url = url;\n  this.img = null;\n  this.loaded = false;\n  this.img = new Image();\n\n  this.img.onload = function () {\n    this.loaded = true;\n  }.bind(this);\n\n  this.img.src = this.url;\n};\n\n\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/image-asset.js?");

/***/ }),

/***/ "./src/ld48/index.js":
/*!***************************!*\
  !*** ./src/ld48/index.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ld48__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ld48 */ \"./src/ld48/ld48.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_ld48__WEBPACK_IMPORTED_MODULE_0__.default);\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/index.js?");

/***/ }),

/***/ "./src/ld48/ld48.js":
/*!**************************!*\
  !*** ./src/ld48/ld48.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ld48/constants.js\");\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./physics */ \"./src/ld48/physics.js\");\n/* harmony import */ var _levels__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./levels */ \"./src/ld48/levels.js\");\n/* harmony import */ var _image_asset__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image-asset */ \"./src/ld48/image-asset.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar searchParams = new URLSearchParams(window.location.search);\nvar DEBUG = searchParams.get('debug') || false;\nvar STARTING_LEVEL = Number.isInteger(parseInt(searchParams.get('level'))) ? parseInt(searchParams.get('level')) - 1 : 0;\n\nvar LD48 = /*#__PURE__*/function () {\n  function LD48() {\n    _classCallCheck(this, LD48);\n\n    this.html = {\n      main: document.getElementById('main'),\n      canvas: document.getElementById('canvas'),\n      menu: document.getElementById('menu'),\n      buttonHome: document.getElementById('button-home'),\n      buttonFullscreen: document.getElementById('button-fullscreen'),\n      buttonReload: document.getElementById('button-reload'),\n      levelsList: document.getElementById('levels-list')\n    };\n    this.menu = false;\n    this.setMenu(false);\n    this.canvas2d = this.html.canvas.getContext('2d');\n    this.canvasWidth = _constants__WEBPACK_IMPORTED_MODULE_0__.APP_WIDTH;\n    this.canvasHeight = _constants__WEBPACK_IMPORTED_MODULE_0__.APP_HEIGHT;\n    this.camera = {\n      target: null,\n      // Target entity to follow. If null, camera is static.\n      x: 0,\n      y: 0\n    };\n    this.setupUI();\n    this.initialised = false;\n    this.assets = {};\n    this.hero = null;\n    this.entities = [];\n    this.levels = new _levels__WEBPACK_IMPORTED_MODULE_2__.default(this);\n    this.playerAction = _constants__WEBPACK_IMPORTED_MODULE_0__.PLAYER_ACTIONS.IDLE;\n    this.playerInput = {\n      // Mouse/touchscreen input\n      pointerStart: undefined,\n      pointerCurrent: undefined,\n      pointerEnd: undefined,\n      // Keys that are currently being pressed.\n      // keysPressed = { key: { duration, acknowledged } }\n      keysPressed: {}\n    };\n    this.victory = false;\n    this.victoryCountdown = 0;\n    this.score = 0;\n    this.prevTime = null;\n    this.nextFrame = window.requestAnimationFrame(this.main.bind(this));\n  }\n\n  _createClass(LD48, [{\n    key: \"initialisationCheck\",\n    value: function initialisationCheck() {\n      var _this = this;\n\n      // Assets check\n      var allAssetsLoaded = true;\n      var numLoadedAssets = 0;\n      var numTotalAssets = 0;\n      Object.keys(this.assets).forEach(function (id) {\n        var asset = _this.assets[id];\n        allAssetsLoaded = allAssetsLoaded && asset.loaded;\n        if (asset.loaded) numLoadedAssets++;\n        numTotalAssets++;\n      }); // Paint status\n\n      this.canvas2d.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n      this.canvas2d.textAlign = 'start';\n      this.canvas2d.textBaseline = 'top';\n      this.canvas2d.fillStyle = '#ccc';\n      this.canvas2d.font = \"1em monospace\";\n      this.canvas2d.fillText(\"Loading \".concat(numLoadedAssets, \" / \").concat(numTotalAssets, \" \"), _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE, _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE);\n\n      if (allAssetsLoaded) {\n        this.initialised = true;\n        this.showUI();\n        this.levels.load(STARTING_LEVEL);\n      }\n    }\n    /*\r\n    Section: General Logic\r\n    ----------------------------------------------------------------------------\r\n     */\n\n  }, {\n    key: \"main\",\n    value: function main(time) {\n      var timeStep = this.prevTime ? time - this.prevTime : time;\n      this.prevTime = time;\n\n      if (this.initialised) {\n        this.play(timeStep);\n        this.paint();\n      } else {\n        this.initialisationCheck();\n      }\n\n      this.nextFrame = window.requestAnimationFrame(this.main.bind(this));\n    }\n  }, {\n    key: \"play\",\n    value: function play(timeStep) {\n      var _this2 = this;\n\n      // If the menu is open, pause all action gameplay\n      if (this.menu) return; // Run the action gameplay\n      // ----------------\n\n      this.entities.forEach(function (entity) {\n        return entity.play(timeStep);\n      });\n      this.checkCollisions(timeStep); // Cleanup\n\n      this.entities = this.entities.filter(function (entity) {\n        return !entity._expired;\n      }); // ----------------\n      // Victory check!\n      // ----------------\n\n      if (this.victory && this.victoryCountdown <= 0) {\n        console.log('VICTORY');\n        this.setMenu(true);\n      }\n\n      if (this.victoryCountdown > 0) {\n        this.victoryCountdown = Math.max(0, this.victoryCountdown - timeStep);\n      } // ----------------\n      // Increment the duration of each currently pressed key\n\n\n      Object.keys(this.playerInput.keysPressed).forEach(function (key) {\n        if (_this2.playerInput.keysPressed[key]) _this2.playerInput.keysPressed[key].duration += timeStep;\n      });\n      this.processPlayerInput();\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var c2d = this.canvas2d;\n      var camera = this.camera; // Camera Controls: focus the camera on the target entity, if any.\n      // ----------------\n\n      if (camera.target) {\n        camera.x = this.canvasWidth / 2 - camera.target.x;\n        camera.y = this.canvasHeight / 2 - camera.target.y;\n      }\n\n      c2d.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n      c2d.strokeStyle = 'rgba(128, 128, 128, 0.05)';\n      c2d.lineWidth = 2; // ----------------\n      // Draw grid\n      // ----------------\n\n      var offsetX = this.camera.x % _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE - _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE;\n      var offsetY = this.camera.y % _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE - _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE;\n\n      for (var y = offsetY; y < _constants__WEBPACK_IMPORTED_MODULE_0__.APP_HEIGHT; y += _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE) {\n        for (var x = offsetX; x < _constants__WEBPACK_IMPORTED_MODULE_0__.APP_WIDTH; x += _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE) {\n          c2d.beginPath();\n          c2d.rect(x, y, _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE, _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE);\n          c2d.stroke(); // Debug Grid\n\n          if (DEBUG) {\n            c2d.fillStyle = '#ccc';\n            c2d.font = \"1em Source Code Pro\";\n            c2d.textAlign = 'center';\n            c2d.textBaseline = 'middle';\n            var col = Math.floor((x - this.camera.x) / _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE);\n            var row = Math.floor((y - this.camera.y) / _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE);\n            c2d.fillText(col + ',' + row, x + _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE / 2, y + _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE / 2); // using template strings here messes up colours in Brackets.\n          }\n        }\n      } // ----------------\n      // Draw entities\n      // ----------------\n\n\n      this.entities.forEach(function (entity) {\n        return entity.paint();\n      }); // ----------------\n      // Draw player input\n      // ----------------\n\n      if (this.playerAction === _constants__WEBPACK_IMPORTED_MODULE_0__.PLAYER_ACTIONS.POINTER_DOWN && this.hero && this.playerInput.pointerCurrent) {\n        var inputCoords = this.playerInput.pointerCurrent;\n        c2d.strokeStyle = '#888';\n        c2d.lineWidth = _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE / 8;\n        c2d.beginPath();\n        c2d.arc(inputCoords.x, inputCoords.y, _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE, 0, 2 * Math.PI);\n        c2d.stroke();\n      } // ----------------\n      // Draw score\n      // ----------------\n\n\n      if (!this.victory) {\n        var X_OFFSET = _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE * 2.5;\n        var Y_OFFSET = _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE * -1.0;\n        c2d.font = '3em Source Code Pro';\n        c2d.textBaseline = 'bottom';\n        c2d.lineWidth = 8;\n        c2d.textAlign = 'right';\n        c2d.strokeStyle = '#fff';\n        c2d.strokeText(\"\".concat(this.score, \" points\"), _constants__WEBPACK_IMPORTED_MODULE_0__.APP_WIDTH - X_OFFSET, _constants__WEBPACK_IMPORTED_MODULE_0__.APP_HEIGHT + Y_OFFSET);\n        c2d.fillStyle = '#c44';\n        c2d.fillText(\"\".concat(this.score, \" points\"), _constants__WEBPACK_IMPORTED_MODULE_0__.APP_WIDTH - X_OFFSET, _constants__WEBPACK_IMPORTED_MODULE_0__.APP_HEIGHT + Y_OFFSET);\n        c2d.textAlign = 'left';\n        c2d.strokeStyle = '#fff';\n        c2d.strokeText(\"Level \".concat(this.levels.current + 1), X_OFFSET, _constants__WEBPACK_IMPORTED_MODULE_0__.APP_HEIGHT + Y_OFFSET);\n        c2d.fillStyle = '#c44';\n        c2d.fillText(\"Level \".concat(this.levels.current + 1), X_OFFSET, _constants__WEBPACK_IMPORTED_MODULE_0__.APP_HEIGHT + Y_OFFSET);\n      } // ----------------\n      // Draw victory\n      // ----------------\n\n\n      if (this.victory) {\n        var victoryAnimationTime = Math.max(this.victoryCountdown - _constants__WEBPACK_IMPORTED_MODULE_0__.PAUSE_AFTER_VICTORY_ANIMATION, 0);\n        var fontSize1 = Math.floor(victoryAnimationTime / _constants__WEBPACK_IMPORTED_MODULE_0__.VICTORY_ANIMATION_TIME * 50 + 10);\n        var fontSize2 = Math.floor(victoryAnimationTime / _constants__WEBPACK_IMPORTED_MODULE_0__.VICTORY_ANIMATION_TIME * 50 + 10);\n        var VERTICAL_OFFSET = _constants__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE / 8;\n        c2d.fillStyle = '#c44';\n        c2d.lineWidth = 2;\n        c2d.textAlign = 'center';\n        c2d.strokeStyle = '#fff';\n        c2d.font = \"\".concat(fontSize1, \"em Source Code Pro\");\n        c2d.textBaseline = 'bottom';\n        c2d.fillText('Nice!', _constants__WEBPACK_IMPORTED_MODULE_0__.APP_WIDTH / 2, _constants__WEBPACK_IMPORTED_MODULE_0__.APP_HEIGHT / 2 - VERTICAL_OFFSET);\n        c2d.strokeText('Nice!', _constants__WEBPACK_IMPORTED_MODULE_0__.APP_WIDTH / 2, _constants__WEBPACK_IMPORTED_MODULE_0__.APP_HEIGHT / 2 - VERTICAL_OFFSET);\n        c2d.font = \"\".concat(fontSize2, \"em Source Code Pro\");\n        c2d.textBaseline = 'top';\n        c2d.fillText(\"\".concat(this.score, \" points\"), _constants__WEBPACK_IMPORTED_MODULE_0__.APP_WIDTH / 2, _constants__WEBPACK_IMPORTED_MODULE_0__.APP_HEIGHT / 2 + VERTICAL_OFFSET);\n        c2d.strokeText(\"\".concat(this.score, \" points\"), _constants__WEBPACK_IMPORTED_MODULE_0__.APP_WIDTH / 2, _constants__WEBPACK_IMPORTED_MODULE_0__.APP_HEIGHT / 2 + VERTICAL_OFFSET);\n      } // ----------------\n\n    }\n  }, {\n    key: \"processPlayerInput\",\n    value: function processPlayerInput(timeStep) {\n      if (this.hero) {\n        // playerActor.intent = undefined;\n        var keysPressed = this.playerInput.keysPressed;\n        var moveX = 0;\n        var moveY = 0;\n        if (keysPressed['ArrowRight']) moveX++;\n        if (keysPressed['ArrowDown']) moveY++;\n        if (keysPressed['ArrowLeft']) moveX--;\n        if (keysPressed['ArrowUp']) moveY--;\n\n        if (moveX || moveY) {\n          this.hero.speedX = 10 * moveX;\n          this.hero.speedY = 10 * moveY;\n        }\n      }\n    }\n    /*\r\n    Section: UI and Event Handling\r\n    ----------------------------------------------------------------------------\r\n     */\n\n  }, {\n    key: \"setupUI\",\n    value: function setupUI() {\n      this.html.canvas.width = this.canvasWidth;\n      this.html.canvas.height = this.canvasHeight;\n\n      if (window.PointerEvent) {\n        this.html.canvas.addEventListener('pointerdown', this.onPointerDown.bind(this));\n        this.html.canvas.addEventListener('pointermove', this.onPointerMove.bind(this));\n        this.html.canvas.addEventListener('pointerup', this.onPointerUp.bind(this));\n        this.html.canvas.addEventListener('pointercancel', this.onPointerUp.bind(this));\n      } else {\n        this.html.canvas.addEventListener('mousedown', this.onPointerDown.bind(this));\n        this.html.canvas.addEventListener('mousemove', this.onPointerMove.bind(this));\n        this.html.canvas.addEventListener('mouseup', this.onPointerUp.bind(this));\n      } // Prevent \"touch and hold to open context menu\" menu on touchscreens.\n\n\n      this.html.canvas.addEventListener('touchstart', stopEvent);\n      this.html.canvas.addEventListener('touchmove', stopEvent);\n      this.html.canvas.addEventListener('touchend', stopEvent);\n      this.html.canvas.addEventListener('touchcancel', stopEvent);\n      this.html.buttonHome.addEventListener('click', this.buttonHome_onClick.bind(this));\n      this.html.buttonFullscreen.addEventListener('click', this.buttonFullscreen_onClick.bind(this));\n      this.html.buttonReload.addEventListener('click', this.buttonReload_onClick.bind(this));\n      this.html.main.addEventListener('keydown', this.onKeyDown.bind(this));\n      this.html.main.addEventListener('keyup', this.onKeyUp.bind(this));\n      window.addEventListener('resize', this.updateUI.bind(this));\n      this.updateUI();\n      this.hideUI(); // Hide until all assets are loaded\n\n      this.html.main.focus();\n    }\n  }, {\n    key: \"hideUI\",\n    value: function hideUI() {\n      this.html.buttonHome.style.visibility = 'hidden';\n      this.html.buttonReload.style.visibility = 'hidden';\n    }\n  }, {\n    key: \"showUI\",\n    value: function showUI() {\n      this.html.buttonHome.style.visibility = 'visible';\n      this.html.buttonReload.style.visibility = 'visible';\n    }\n  }, {\n    key: \"updateUI\",\n    value: function updateUI() {\n      // Fit the Interaction layer to the canvas\n      var canvasBounds = this.html.canvas.getBoundingClientRect();\n      this.html.menu.style.width = \"\".concat(canvasBounds.width, \"px\");\n      this.html.menu.style.height = \"\".concat(canvasBounds.height, \"px\");\n      this.html.menu.style.top = '0';\n      this.html.menu.style.left = \"\".concat(canvasBounds.left, \"px\");\n    }\n  }, {\n    key: \"setMenu\",\n    value: function setMenu(menu) {\n      this.menu = menu;\n\n      if (menu) {\n        this.html.menu.style.visibility = 'visible';\n        this.html.buttonReload.style.visibility = 'hidden';\n      } else {\n        this.html.menu.style.visibility = 'hidden';\n        this.html.buttonReload.style.visibility = 'visible';\n        this.html.main.focus();\n      }\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(e) {\n      var coords = getEventCoords(e, this.html.canvas);\n      var camera = this.camera;\n      this.playerInput.pointerStart = undefined;\n      this.playerInput.pointerCurrent = undefined;\n      this.playerInput.pointerEnd = undefined;\n\n      if (this.hero) {\n        var distX = this.hero.x - coords.x + camera.x;\n        var distY = this.hero.y - coords.y + camera.y;\n        var distFromHero = Math.sqrt(distX * distX + distY * distY);\n        var rotation = Math.atan2(distY, distX);\n\n        if (distFromHero < _constants__WEBPACK_IMPORTED_MODULE_0__.ACCEPTABLE_INPUT_DISTANCE_FROM_HERO) {\n          this.playerAction = _constants__WEBPACK_IMPORTED_MODULE_0__.PLAYER_ACTIONS.POINTER_DOWN;\n          this.playerInput.pointerStart = coords;\n          this.playerInput.pointerCurrent = coords;\n        }\n      }\n\n      return stopEvent(e);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(e) {\n      var coords = getEventCoords(e, this.html.canvas);\n      this.playerInput.pointerCurrent = coords;\n      return stopEvent(e);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(e) {\n      var coords = getEventCoords(e, this.html.canvas);\n\n      if (this.playerAction === _constants__WEBPACK_IMPORTED_MODULE_0__.PLAYER_ACTIONS.POINTER_DOWN) {\n        this.playerInput.pointerEnd = coords;\n        this.playerAction = _constants__WEBPACK_IMPORTED_MODULE_0__.PLAYER_ACTIONS.IDLE;\n        /* this.shoot() */\n      }\n\n      return stopEvent(e);\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(e) {\n      if (!this.playerInput.keysPressed[e.key]) {\n        this.playerInput.keysPressed[e.key] = {\n          duration: 0,\n          acknowledged: false\n        };\n      }\n    }\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp(e) {\n      this.playerInput.keysPressed[e.key] = undefined;\n    }\n  }, {\n    key: \"buttonHome_onClick\",\n    value: function buttonHome_onClick() {\n      this.setMenu(!this.menu);\n    }\n  }, {\n    key: \"buttonFullscreen_onClick\",\n    value: function buttonFullscreen_onClick() {\n      var isFullscreen = document.fullscreenElement;\n\n      if (!isFullscreen) {\n        if (this.html.main.requestFullscreen) {\n          this.html.main.className = 'fullscreen';\n          this.html.main.requestFullscreen();\n        }\n      } else {\n        var _document$exitFullscr, _document;\n\n        (_document$exitFullscr = (_document = document).exitFullscreen) === null || _document$exitFullscr === void 0 ? void 0 : _document$exitFullscr.call(_document);\n        this.html.main.className = '';\n      }\n\n      this.updateUI();\n    }\n  }, {\n    key: \"buttonReload_onClick\",\n    value: function buttonReload_onClick() {\n      this.levels.reload();\n    }\n    /*\r\n    Section: Gameplay\r\n    ----------------------------------------------------------------------------\r\n     */\n\n  }, {\n    key: \"shoot\",\n    value: function shoot() {\n      /*\r\n      if (!this.hero || !this.playerInput.pointerCurrent) return\r\n      \r\n      const camera = this.camera\r\n      \r\n      const inputCoords = this.playerInput.pointerCurrent\r\n      const directionX = this.hero.x - inputCoords.x + camera.x\r\n      const directionY = this.hero.y - inputCoords.y + camera.y\r\n      const dist = Math.sqrt(directionX * directionX + directionY * directionY)\r\n      const rotation = Math.atan2(directionY, directionX)\r\n        const intendedMovement = dist / MAX_PULL_DISTANCE * this.hero.moveMaxSpeed\r\n      const movementSpeed = Math.min(\r\n        intendedMovement,\r\n        this.hero.moveMaxSpeed\r\n      )\r\n      \r\n      console.log('MOVEMENT SPEED: ', movementSpeed)\r\n      console.log('STARTING COORDS: ' + this.hero.x + ' , ' + this.hero.y)  // using template strings here messes up colours in Brackets.\r\n      \r\n      this.hero.speedX = Math.cos(rotation) * movementSpeed\r\n      this.hero.speedY = Math.sin(rotation) * movementSpeed\r\n      */\n    }\n  }, {\n    key: \"celebrateVictory\",\n    value: function celebrateVictory() {\n      if (this.victory) return;\n      this.victory = true;\n      this.victoryCountdown = _constants__WEBPACK_IMPORTED_MODULE_0__.VICTORY_ANIMATION_TIME + _constants__WEBPACK_IMPORTED_MODULE_0__.PAUSE_AFTER_VICTORY_ANIMATION;\n    }\n    /*\r\n    Section: Misc\r\n    ----------------------------------------------------------------------------\r\n     */\n\n  }, {\n    key: \"checkCollisions\",\n    value: function checkCollisions(timeStep) {\n      for (var a = 0; a < this.entities.length; a++) {\n        var entityA = this.entities[a];\n\n        for (var b = a + 1; b < this.entities.length; b++) {\n          var entityB = this.entities[b];\n          var collisionCorrection = _physics__WEBPACK_IMPORTED_MODULE_1__.default.checkCollision(entityA, entityB);\n\n          if (collisionCorrection) {\n            entityA.onCollision(entityB, collisionCorrection.a);\n            entityB.onCollision(entityA, collisionCorrection.b);\n          }\n        }\n      }\n    }\n  }]);\n\n  return LD48;\n}();\n\nfunction getEventCoords(event, element) {\n  var xRatio = element.width && element.offsetWidth ? element.width / element.offsetWidth : 1;\n  var yRatio = element.height && element.offsetHeight ? element.height / element.offsetHeight : 1;\n  var x = event.offsetX * xRatio;\n  var y = event.offsetY * yRatio;\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction stopEvent(e) {\n  if (!e) return false;\n  e.preventDefault && e.preventDefault();\n  e.stopPropagation && e.stopPropagation();\n  e.returnValue = false;\n  e.cancelBubble = true;\n  return false;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LD48);\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/ld48.js?");

/***/ }),

/***/ "./src/ld48/levels.js":
/*!****************************!*\
  !*** ./src/ld48/levels.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Levels)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ld48/constants.js\");\n/* harmony import */ var _entities_hero__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./entities/hero */ \"./src/ld48/entities/hero.js\");\n/* harmony import */ var _entities_goal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./entities/goal */ \"./src/ld48/entities/goal.js\");\n/* harmony import */ var _entities_wall__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./entities/wall */ \"./src/ld48/entities/wall.js\");\n/* harmony import */ var _entities_coin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./entities/coin */ \"./src/ld48/entities/coin.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\nvar Levels = /*#__PURE__*/function () {\n  function Levels(app) {\n    _classCallCheck(this, Levels);\n\n    this._app = app;\n    this.current = 0;\n  }\n\n  _createClass(Levels, [{\n    key: \"reset\",\n    value: function reset() {\n      var app = this._app;\n      app.hero = undefined;\n      app.entities = [];\n      app.camera = {\n        target: null,\n        x: 0,\n        y: 0\n      };\n      app.playerAction = _constants__WEBPACK_IMPORTED_MODULE_0__.PLAYER_ACTIONS.IDLE;\n      app.victory = 0;\n      app.victoryCountdown = 0;\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var app = this._app;\n      this.current = level;\n      this.reset();\n      this.generate_default(); // Rearrange: \n\n      app.entities.sort(function (a, b) {\n        return a.z - b.z;\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.load(this.current);\n    }\n    /*\r\n    Default level.\r\n     */\n\n  }, {\n    key: \"generate_default\",\n    value: function generate_default() {\n      var app = this._app;\n      app.hero = new _entities_hero__WEBPACK_IMPORTED_MODULE_1__.default(app, 11, 7);\n      app.entities.push(app.hero);\n      app.camera.target = app.hero;\n      app.entities.push(new _entities_goal__WEBPACK_IMPORTED_MODULE_2__.default(app, 19, 3));\n      app.entities.push(new _entities_wall__WEBPACK_IMPORTED_MODULE_3__.default(app, 0, 0, 1, 15)); // West Wall\n\n      app.entities.push(new _entities_wall__WEBPACK_IMPORTED_MODULE_3__.default(app, 22, 0, 1, 15)); // East Wall\n\n      app.entities.push(new _entities_wall__WEBPACK_IMPORTED_MODULE_3__.default(app, 1, 0, 21, 1)); // North Wall\n\n      app.entities.push(new _entities_wall__WEBPACK_IMPORTED_MODULE_3__.default(app, 1, 14, 21, 1)); // South Wall\n    }\n  }]);\n\n  return Levels;\n}();\n\n\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/levels.js?");

/***/ }),

/***/ "./src/ld48/physics.js":
/*!*****************************!*\
  !*** ./src/ld48/physics.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Physics)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/ld48/constants.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar USE_CIRCLE_APPROXIMATION = false;\n\nvar Physics = /*#__PURE__*/function () {\n  function Physics() {\n    _classCallCheck(this, Physics);\n  }\n\n  _createClass(Physics, null, [{\n    key: \"checkCollision\",\n    value: //----------------------------------------------------------------\n\n    /*  Checks if objA is touching objB.\r\n        If true, returns the corrected coordinates for objA and objB, in form:\r\n          { a: { x, y },\r\n            b: { x, y } }\r\n        If false, returns null.\r\n     */\n    function checkCollision(objA, objB) {\n      if (!objA || !objB || objA === objB) return null; // Circle + Circle collision\n\n      if (objA.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.CIRCLE && objB.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.CIRCLE) {\n        return Physics.checkCollision_circleCircle(objA, objB);\n      } // Polygon + Polygon collision. (Squares are polygons, of course.)\n      else if ((objA.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.SQUARE || objA.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.POLYGON) && (objB.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.SQUARE || objB.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.POLYGON)) {\n          return Physics.checkCollision_polygonPolygon(objA, objB);\n        } // Circle + Polygon collision.\n        else if (objA.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.CIRCLE && (objB.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.SQUARE || objB.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.POLYGON)) {\n            if (USE_CIRCLE_APPROXIMATION) return Physics.checkCollision_polygonPolygon(objA, objB);\n            return Physics.checkCollision_circlePolygon(objA, objB);\n          } // Polygon + Circle collision\n          // It's the reverse of the previous scenario.\n          else if ((objA.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.SQUARE || objA.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.POLYGON) && objB.shape === _constants__WEBPACK_IMPORTED_MODULE_0__.SHAPES.CIRCLE) {\n              if (USE_CIRCLE_APPROXIMATION) return Physics.checkCollision_polygonPolygon(objA, objB);\n              var correction = Physics.checkCollision_circlePolygon(objB, objA);\n\n              if (correction) {\n                correction = {\n                  a: correction.b,\n                  b: correction.a\n                };\n              }\n\n              return correction;\n            }\n\n      return null;\n    } //----------------------------------------------------------------\n\n  }, {\n    key: \"checkCollision_circleCircle\",\n    value: function checkCollision_circleCircle(objA, objB) {\n      var fractionA = 0;\n      var fractionB = 0;\n\n      if (!objA.solid || !objB.solid) {//If either object isn't solid, there's no collision correction.\n      } else if (objA.movable && objB.movable) {\n        fractionA = 0.5;\n        fractionB = 0.5;\n      } else if (objA.movable) {\n        fractionA = 1;\n      } else if (objB.movable) {\n        fractionB = 1;\n      }\n\n      var distX = objB.x - objA.x;\n      var distY = objB.y - objA.y;\n      var dist = Math.sqrt(distX * distX + distY * distY);\n      var minimumDist = objA.radius + objB.radius;\n\n      if (dist < minimumDist) {\n        var angle = Math.atan2(distY, distX);\n        var correctDist = minimumDist;\n        var cosAngle = Math.cos(angle);\n        var sinAngle = Math.sin(angle);\n        var motion = Physics.getPostCollisionMotion(objA, objB);\n        return {\n          a: {\n            x: objA.x - cosAngle * (correctDist - dist) * fractionA,\n            y: objA.y - sinAngle * (correctDist - dist) * fractionA,\n            speedX: motion && motion.a.speedX,\n            speedY: motion && motion.a.speedY\n          },\n          b: {\n            x: objB.x + cosAngle * (correctDist - dist) * fractionB,\n            y: objB.y + sinAngle * (correctDist - dist) * fractionB,\n            speedX: motion && motion.b.speedX,\n            speedY: motion && motion.b.speedY\n          }\n        };\n      }\n\n      return null;\n    } //----------------------------------------------------------------\n\n  }, {\n    key: \"checkCollision_polygonPolygon\",\n    value: function checkCollision_polygonPolygon(objA, objB) {\n      var fractionA = 0;\n      var fractionB = 0;\n\n      if (!objA.solid || !objB.solid) {//If either object isn't solid, there's no collision correction.\n      } else if (objA.movable && objB.movable) {\n        fractionA = 0.5;\n        fractionB = 0.5;\n      } else if (objA.movable) {\n        fractionA = 1;\n      } else if (objB.movable) {\n        fractionB = 1;\n      }\n\n      var correction = null;\n      var verticesA = objA.vertices;\n      var verticesB = objB.vertices;\n      var projectionAxes = [].concat(_toConsumableArray(Physics.getShapeNormals(objA)), _toConsumableArray(Physics.getShapeNormals(objB)));\n\n      for (var i = 0; i < projectionAxes.length; i++) {\n        var axis = projectionAxes[i];\n        var projectionA = {\n          min: Infinity,\n          max: -Infinity\n        };\n        var projectionB = {\n          min: Infinity,\n          max: -Infinity\n        };\n\n        for (var j = 0; j < verticesA.length; j++) {\n          var val = Physics.dotProduct(axis, verticesA[j]);\n          projectionA.min = Math.min(projectionA.min, val);\n          projectionA.max = Math.max(projectionA.max, val);\n        }\n\n        for (var _j = 0; _j < verticesB.length; _j++) {\n          var _val = Physics.dotProduct(axis, verticesB[_j]);\n\n          projectionB.min = Math.min(projectionB.min, _val);\n          projectionB.max = Math.max(projectionB.max, _val);\n        }\n\n        var overlap = Math.max(0, Math.min(projectionA.max, projectionB.max) - Math.max(projectionA.min, projectionB.min));\n\n        if (!correction || overlap < correction.magnitude) {\n          var sign = Math.sign(projectionB.min + projectionB.max - (projectionA.min + projectionA.max));\n          correction = {\n            magnitude: overlap,\n            x: axis.x * overlap * sign,\n            y: axis.y * overlap * sign\n          };\n        }\n      }\n\n      if (correction && correction.magnitude > 0) {\n        return {\n          a: {\n            x: objA.x - correction.x * fractionA,\n            y: objA.y - correction.y * fractionA\n          },\n          b: {\n            x: objB.x + correction.x * fractionB,\n            y: objB.y + correction.y * fractionB\n          }\n        };\n      }\n\n      return null;\n    } //----------------------------------------------------------------\n\n  }, {\n    key: \"checkCollision_circlePolygon\",\n    value: function checkCollision_circlePolygon(objA, objB) {\n      var fractionA = 0;\n      var fractionB = 0;\n\n      if (!objA.solid || !objB.solid) {//If either object isn't solid, there's no collision correction.\n      } else if (objA.movable && objB.movable) {\n        fractionA = 0.5;\n        fractionB = 0.5;\n      } else if (objA.movable) {\n        fractionA = 1;\n      } else if (objB.movable) {\n        fractionB = 1;\n      }\n\n      var distX = objB.x - objA.x;\n      var distY = objB.y - objA.y;\n      var dist = Math.sqrt(distX * distX + distY * distY);\n      var angle = Math.atan2(distY, distX);\n      var centreToCentreAxis = dist !== 0 ? {\n        x: distX / dist,\n        y: distY / dist\n      } : {\n        x: 0,\n        y: 0\n      };\n      var correction = null;\n      var verticesB = objB.vertices;\n      var projectionAxes = [centreToCentreAxis].concat(_toConsumableArray(Physics.getShapeNormals(objB)));\n\n      for (var i = 0; i < projectionAxes.length; i++) {\n        var axis = projectionAxes[i];\n        var scalarA = Physics.dotProduct(axis, {\n          x: objA.x,\n          y: objA.y\n        });\n        var projectionA = {\n          min: scalarA - objA.radius,\n          max: scalarA + objA.radius\n        };\n        var projectionB = {\n          min: Infinity,\n          max: -Infinity\n        };\n\n        for (var j = 0; j < verticesB.length; j++) {\n          var val = Physics.dotProduct(axis, verticesB[j]);\n          projectionB.min = Math.min(projectionB.min, val);\n          projectionB.max = Math.max(projectionB.max, val);\n        }\n\n        var overlap = Math.max(0, Math.min(projectionA.max, projectionB.max) - Math.max(projectionA.min, projectionB.min));\n\n        if (!correction || overlap < correction.magnitude) {\n          var sign = Math.sign(projectionB.min + projectionB.max - (projectionA.min + projectionA.max));\n          correction = {\n            magnitude: overlap,\n            x: axis.x * overlap * sign,\n            y: axis.y * overlap * sign\n          };\n        }\n      }\n\n      if (correction && correction.magnitude > 0) {\n        return {\n          a: {\n            x: objA.x - correction.x * fractionA,\n            y: objA.y - correction.y * fractionA\n          },\n          b: {\n            x: objB.x + correction.x * fractionB,\n            y: objB.y + correction.y * fractionB\n          }\n        };\n      }\n    } //----------------------------------------------------------------\n\n    /*  Gets the NORMALISED normals for each edge of the object's shape. Assumes the object has the 'vertices' property.\r\n     */\n\n  }, {\n    key: \"getShapeNormals\",\n    value: function getShapeNormals(obj) {\n      var vertices = obj.vertices;\n      if (!vertices) return null;\n      if (vertices.length < 2) return []; //Look, you need to have at least three vertices to be a shape.\n      //First, calculate the edges connecting each vertice.\n      //--------------------------------\n\n      var edges = [];\n\n      for (var i = 0; i < vertices.length; i++) {\n        var p1 = vertices[i];\n        var p2 = vertices[(i + 1) % vertices.length];\n        edges.push({\n          x: p2.x - p1.x,\n          y: p2.y - p1.y\n        });\n      } //--------------------------------\n      //Calculate the NORMALISED normals for each edge.\n      //--------------------------------\n\n\n      return edges.map(function (edge) {\n        var dist = Math.sqrt(edge.x * edge.x + edge.y * edge.y);\n        if (dist === 0) return {\n          x: 0,\n          y: 0\n        };\n        return {\n          x: -edge.y / dist,\n          y: edge.x / dist\n        };\n      }); //--------------------------------\n    } //----------------------------------------------------------------\n\n  }, {\n    key: \"getPostCollisionMotion\",\n    value: function getPostCollisionMotion(objA, objB) {\n      if (!objA || !objB) return null;\n      if (!objA.movable || !objA.solid || objA.mass === 0 || !objB.movable || !objB.solid || objB.mass === 0 || objA.mass + objB.mass === 0) return null;\n      var collisionAngle = Math.atan2(objB.y - objA.y, objB.x - objA.x);\n      var ANGLE_90 = Math.PI / 2;\n      var totalMass = objA.mass + objB.mass;\n      var aSpd = objA.movementSpeed;\n      var bSpd = objB.movementSpeed;\n      var aAng = objA.movementAngle;\n      var bAng = objB.movementAngle;\n      var aMass = objA.mass;\n      var bMass = objB.mass;\n      var aGroup = (aSpd * Math.cos(aAng - collisionAngle) * (aMass - bMass) + 2 * bMass * bSpd * Math.cos(bAng - collisionAngle)) / totalMass;\n      var bGroup = (bSpd * Math.cos(bAng - collisionAngle) * (bMass - aMass) + 2 * aMass * aSpd * Math.cos(aAng - collisionAngle)) / totalMass;\n      var objA_speedX = aGroup * Math.cos(collisionAngle) + aSpd * Math.sin(aAng - collisionAngle) * Math.cos(collisionAngle + ANGLE_90);\n      var objA_speedY = aGroup * Math.sin(collisionAngle) + aSpd * Math.sin(aAng - collisionAngle) * Math.sin(collisionAngle + ANGLE_90);\n      var objB_speedX = bGroup * Math.cos(collisionAngle) + bSpd * Math.sin(bAng - collisionAngle) * Math.cos(collisionAngle + ANGLE_90);\n      var objB_speedY = bGroup * Math.sin(collisionAngle) + bSpd * Math.sin(bAng - collisionAngle) * Math.sin(collisionAngle + ANGLE_90);\n      return {\n        a: {\n          speedX: objA_speedX,\n          speedY: objA_speedY\n        },\n        b: {\n          speedX: objB_speedX,\n          speedY: objB_speedY\n        }\n      };\n    } //----------------------------------------------------------------\n\n  }, {\n    key: \"dotProduct\",\n    value: function dotProduct(vectorA, vectorB) {\n      if (!vectorA || !vectorB) return null;\n      return vectorA.x * vectorB.x + vectorA.y * vectorB.y;\n    } //----------------------------------------------------------------\n\n  }]);\n\n  return Physics;\n}();\n\n\n\n//# sourceURL=webpack://ludumdare-48/./src/ld48/physics.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ld48__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ld48 */ \"./src/ld48/index.js\");\n\nvar ld48;\n\nwindow.onload = function () {\n  window.ld48 = new _ld48__WEBPACK_IMPORTED_MODULE_0__.default();\n};\n\n//# sourceURL=webpack://ludumdare-48/./src/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;